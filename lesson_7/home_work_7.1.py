"""
Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()),
который должен принимать данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
Примеры матриц вы найдете в методичке.
Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
Далее реализовать перегрузку метода __add__() для реализации операции
сложения двух объектов класса Matrix (двух матриц). Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки
первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.
"""


class Matrix:

    def __init__(self, my_list):
        self.my_list = my_list

    def __str__(self):
        return f'{self.my_list[0]}\n{self.my_list[1]}\n{self.my_list[2]}'

    def __add__(self, other):
        a = [x + y for x, y in zip(self.my_list[0], other.my_list[0])]
        b = [x + y for x, y in zip(self.my_list[1], other.my_list[1])]
        c = [x + y for x, y in zip(self.my_list[2], other.my_list[2])]
        return Matrix([a, b, c])


my_matrix1 = Matrix([[1, 2, 3], [2, 4, 5], [6, 7, 1]])
my_matrix2 = Matrix([[5, 7, 1], [3, 0, 10], [5, 2, 5]])
new_matrix = my_matrix1 + my_matrix2
print(f'Первая матрица:\n{my_matrix1}')
print(f'Вторая матрица:\n{my_matrix2}')
print(f'Результат сложения матриц:\n{new_matrix}')
